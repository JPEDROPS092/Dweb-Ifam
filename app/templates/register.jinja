{% extends "auth.jinja" %}

{% block title %}Cadastro - IFAM Sistema de Gerenciamento{% endblock %}

{% block auth_content %}
<h2 class="form-title">Criar Conta</h2>
<p class="form-subtitle">Preencha os dados para se cadastrar no sistema</p>

{% if error %}
<div class="alert alert-danger alert-dismissible fade show" role="alert">
    <i class="bi bi-exclamation-triangle-fill me-2"></i>
    {{ error }}
    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
</div>
{% endif %}

{% if success %}
<div class="alert alert-success alert-dismissible fade show" role="alert">
    <i class="bi bi-check-circle-fill me-2"></i>
    {{ success }}
    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
</div>
{% endif %}

<form method="post" action="/register" id="registerForm" data-validate="true">
    <!-- CSRF Token -->
    <input type="hidden" name="csrf_token" value="{{ csrf_token }}">
    <div class="row">
        <div class="col-md-6">
            <div class="mb-3">
                <label for="name" class="form-label">Nome</label>
                <div class="input-group">
                    <span class="input-group-text">
                        <i class="bi bi-person"></i>
                    </span>
                    <input type="text" class="form-control left-border-none" id="name" name="name" 
                           placeholder="Seu nome" required data-pattern="name" minlength="2" maxlength="50">
                </div>
            </div>
        </div>
        
        <div class="col-md-6">
            <div class="mb-3">
                <label for="surname" class="form-label">Sobrenome</label>
                <div class="input-group">
                    <span class="input-group-text">
                        <i class="bi bi-person"></i>
                    </span>
                    <input type="text" class="form-control left-border-none" id="surname" name="surname" 
                           placeholder="Seu sobrenome" required data-pattern="name" minlength="2" maxlength="50">
                </div>
            </div>
        </div>
    </div>
    
    <div class="mb-3">
        <label for="email" class="form-label">Email</label>
        <div class="input-group">
            <span class="input-group-text">
                <i class="bi bi-envelope"></i>
            </span>
            <input type="email" class="form-control left-border-none" id="email" name="email" 
                   placeholder="seu.email@ifam.edu.br" required data-pattern="ifamEmail" data-validate-on-input="true">
        </div>
        <div class="form-text">Use seu email institucional para acesso a todas as funcionalidades.</div>
    </div>
    
    <div class="mb-3">
        <label for="password" class="form-label">Senha</label>
        <div class="input-group">
            <span class="input-group-text">
                <i class="bi bi-lock"></i>
            </span>
            <input type="password" class="form-control left-border-none" id="password" name="password" 
                   placeholder="Crie uma senha segura" required data-pattern="password" minlength="8">
        </div>
        <div class="form-text">A senha deve ter pelo menos 8 caracteres.</div>
    </div>
    
    <div class="mb-4">
        <label for="confirmPassword" class="form-label">Confirmar Senha</label>
        <div class="input-group">
            <span class="input-group-text">
                <i class="bi bi-lock-fill"></i>
            </span>
            <input type="password" class="form-control left-border-none" id="confirmPassword" name="confirmPassword" 
                   placeholder="Confirme sua senha" required data-match="password">
        </div>
    </div>
    
    <div class="mb-4">
        <div class="form-check">
            <input class="form-check-input" type="checkbox" id="terms" name="terms" required>
            <label class="form-check-label" for="terms">
                Concordo com os <a href="/terms" class="text-decoration-none" style="color: var(--primary-color);">Termos de Uso</a> e <a href="/privacy" class="text-decoration-none" style="color: var(--primary-color);">Política de Privacidade</a>
            </label>
        </div>
    </div>
    
    <div class="d-grid gap-2">
        <button type="submit" class="btn btn-primary" id="registerButton">
            <i class="bi bi-person-plus-fill me-2"></i> Cadastrar
        </button>
    </div>
</form>

<div class="auth-footer">
    <p>Já tem uma conta? <a href="/login">Faça login</a></p>
</div>
{% endblock %}

{% block scripts %}
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Initialize form validation
        if (window.IFAM && window.IFAM.validation) {
            window.IFAM.validation.initFormValidation('registerForm', function(event) {
                // Show loading overlay
                if (window.IFAM && window.IFAM.ui && window.IFAM.ui.loadingOverlay) {
                    window.IFAM.ui.loadingOverlay.show('Criando sua conta...');
                }
                
                // Set button to loading state
                if (window.IFAM && window.IFAM.ui && window.IFAM.ui.formButton) {
                    window.IFAM.ui.formButton.setLoading('registerButton', 'Criando conta...');
                }
                
                // Add CSRF token header for AJAX requests
                const csrfToken = document.querySelector('input[name="csrf_token"]').value;
                if (csrfToken) {
                    // Set CSRF token in header for any AJAX requests
                    const originalFetch = window.fetch;
                    window.fetch = function(url, options = {}) {
                        options.headers = options.headers || {};
                        options.headers['X-CSRF-Token'] = csrfToken;
                        return originalFetch(url, options);
                    };
                    
                    // Also set for jQuery if available
                    if (window.jQuery) {
                        $.ajaxSetup({
                            headers: {
                                'X-CSRF-Token': csrfToken
                            }
                        });
                    }
                }
            });
        }
        
        // Add password visibility toggle for both password fields
        const passwordFields = ['password', 'confirmPassword'];
        passwordFields.forEach(function(fieldId) {
            const passwordField = document.getElementById(fieldId);
            if (passwordField) {
                const toggleButton = document.createElement('button');
                toggleButton.type = 'button';
                toggleButton.className = 'btn btn-outline-secondary';
                toggleButton.innerHTML = '<i class="bi bi-eye"></i>';
                toggleButton.setAttribute('aria-label', 'Toggle password visibility');
                
                passwordField.parentNode.appendChild(toggleButton);
                
                toggleButton.addEventListener('click', function() {
                    const type = passwordField.getAttribute('type') === 'password' ? 'text' : 'password';
                    passwordField.setAttribute('type', type);
                    toggleButton.innerHTML = type === 'password' ? '<i class="bi bi-eye"></i>' : '<i class="bi bi-eye-slash"></i>';
                });
            }
        });
        
        // Add password strength meter
        const passwordField = document.getElementById('password');
        if (passwordField) {
            // Create strength meter elements
            const strengthMeter = document.createElement('div');
            strengthMeter.className = 'password-strength mt-2';
            strengthMeter.innerHTML = `
                <div class="progress" style="height: 5px;">
                    <div class="progress-bar" role="progressbar" style="width: 0%;" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
                </div>
                <small class="strength-text text-muted mt-1">Força da senha: <span>Muito fraca</span></small>
            `;
            
            // Insert after form-text
            const formText = passwordField.parentNode.nextElementSibling;
            formText.parentNode.insertBefore(strengthMeter, formText.nextSibling);
            
            // Get elements
            const progressBar = strengthMeter.querySelector('.progress-bar');
            const strengthText = strengthMeter.querySelector('.strength-text span');
            
            // Update strength on input
            passwordField.addEventListener('input', function() {
                const value = passwordField.value;
                let strength = 0;
                let status = '';
                
                // Calculate strength
                if (value.length >= 8) strength += 20;
                if (value.match(/[a-z]+/)) strength += 20;
                if (value.match(/[A-Z]+/)) strength += 20;
                if (value.match(/[0-9]+/)) strength += 20;
                if (value.match(/[^a-zA-Z0-9]+/)) strength += 20;
                
                // Update progress bar
                progressBar.style.width = strength + '%';
                progressBar.setAttribute('aria-valuenow', strength);
                
                // Update color
                if (strength <= 20) {
                    progressBar.className = 'progress-bar bg-danger';
                    status = 'Muito fraca';
                } else if (strength <= 40) {
                    progressBar.className = 'progress-bar bg-warning';
                    status = 'Fraca';
                } else if (strength <= 60) {
                    progressBar.className = 'progress-bar bg-info';
                    status = 'Média';
                } else if (strength <= 80) {
                    progressBar.className = 'progress-bar bg-primary';
                    status = 'Forte';
                } else {
                    progressBar.className = 'progress-bar bg-success';
                    status = 'Muito forte';
                }
                
                // Update text
                strengthText.textContent = status;
            });
        }
    });
</script>
{% endblock %}
