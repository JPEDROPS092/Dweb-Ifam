const ValidationConfig={patterns:{email:{regex:/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/,message:"Por favor, insira um email válido"},ifamEmail:{regex:/^[a-zA-Z0-9._%+-]+@ifam\.edu\.br$/,message:"Por favor, use seu email institucional (@ifam.edu.br)"},password:{regex:/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/,message:"A senha deve ter pelo menos 8 caracteres, incluindo letras maiúsculas, minúsculas, números e caracteres especiais"},name:{regex:/^[A-Za-zÀ-ÖØ-öø-ÿ\s]{2,}$/,message:"Por favor, insira um nome válido (mínimo 2 caracteres)"},phone:{regex:/^\(\d{2}\)\s\d{5}-\d{4}$/,message:"Por favor, insira um telefone no formato (99) 99999-9999"},date:{regex:/^\d{4}-\d{2}-\d{2}$/,message:"Por favor, insira uma data no formato AAAA-MM-DD"},time:{regex:/^\d{2}:\d{2}$/,message:"Por favor, insira um horário no formato HH:MM"},number:{regex:/^\d+$/,message:"Por favor, insira apenas números"}},messages:{required:"Este campo é obrigatório",minLength:"Este campo deve ter pelo menos {0} caracteres",maxLength:"Este campo deve ter no máximo {0} caracteres",passwordMatch:"As senhas não coincidem",dateRange:"A data deve estar entre {0} e {1}",timeRange:"O horário deve estar entre {0} e {1}",min:"O valor mínimo é {0}",max:"O valor máximo é {0}"}};function validateField(e){if(e.disabled)return!0;const t=e.value.trim();if(e.hasAttribute("required")&&""===t)return showError(e,ValidationConfig.messages.required),!1;if(""===t&&!e.hasAttribute("required"))return clearError(e),!0;const a=e.getAttribute("minlength");if(a&&t.length<parseInt(a))return showError(e,ValidationConfig.messages.minLength.replace("{0}",a)),!1;const r=e.getAttribute("maxlength");if(r&&t.length>parseInt(r))return showError(e,ValidationConfig.messages.maxLength.replace("{0}",r)),!1;const n=e.getAttribute("data-pattern");if(n&&ValidationConfig.patterns[n]){const a=ValidationConfig.patterns[n];if(!a.regex.test(t))return showError(e,a.message),!1}const s=e.getAttribute("pattern");if(s){const a=new RegExp(s);if(!a.test(t))return showError(e,e.getAttribute("title")||"Por favor, insira um valor válido"),!1}if("number"===e.type){const a=e.getAttribute("min"),r=e.getAttribute("max"),n=parseFloat(t);if(a&&n<parseFloat(a))return showError(e,ValidationConfig.messages.min.replace("{0}",a)),!1;if(r&&n>parseFloat(r))return showError(e,ValidationConfig.messages.max.replace("{0}",r)),!1}if("date"===e.type){const a=e.getAttribute("min"),r=e.getAttribute("max");if(a&&t<a)return showError(e,ValidationConfig.messages.dateRange.replace("{0}",formatDate(a)).replace("{1}",formatDate(r))),!1;if(r&&t>r)return showError(e,ValidationConfig.messages.dateRange.replace("{0}",formatDate(a)).replace("{1}",formatDate(r))),!1}if("time"===e.type){const a=e.getAttribute("min"),r=e.getAttribute("max");if(a&&t<a)return showError(e,ValidationConfig.messages.timeRange.replace("{0}",a).replace("{1}",r)),!1;if(r&&t>r)return showError(e,ValidationConfig.messages.timeRange.replace("{0}",a).replace("{1}",r)),!1}if(e.getAttribute("data-match")){const a=e.getAttribute("data-match"),r=document.getElementById(a);if(r&&t!==r.value)return showError(e,ValidationConfig.messages.passwordMatch),!1}return clearError(e),!0}function showError(e,t){e.classList.add("is-invalid"),e.classList.remove("is-valid");let a=e.nextElementSibling;a&&a.classList.contains("invalid-feedback")||(a=document.createElement("div"),a.className="invalid-feedback",e.parentNode.insertBefore(a,e.nextSibling)),a.textContent=t}function clearError(e){e.classList.remove("is-invalid"),e.classList.add("is-valid");const t=e.nextElementSibling;t&&t.classList.contains("invalid-feedback")&&(t.textContent="")}function formatDate(e){if(!e)return"";const t=e.split("-");return 3!==t.length?e:`${t[2]}/${t[1]}/${t[0]}`}function validateForm(e){const t=e.querySelectorAll("input, select, textarea");let a=!0;return t.forEach(e=>{validateField(e)||(a=!1)}),a}function initFormValidation(e,t){const a=document.getElementById(e);if(!a)return;a.addEventListener("submit",function(e){const r=validateForm(a);return!r||(r&&"function"==typeof t&&t(e),void 0)}),a.querySelectorAll("input, select, textarea").forEach(e=>{e.addEventListener("blur",function(){validateField(e)}),"true"===e.getAttribute("data-validate-on-input")&&e.addEventListener("input",function(){validateField(e)})})}document.addEventListener("DOMContentLoaded",function(){document.querySelectorAll('form[data-validate="true"]').forEach(e=>{initFormValidation(e.id)})}),window.IFAM=window.IFAM||{},window.IFAM.validation={validateField,validateForm,initFormValidation};
